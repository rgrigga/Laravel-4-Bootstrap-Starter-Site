<aside>
My biggest project was a 2 year process during which I helped a small roofing company integrate technology into their business.  The owner told me on day one: "your job will be to automate this company".  So I learned PHP, MYSQL, AJAX, and CSS, and wrote a web app which allowed the salespeople and the back office to collaborate.  Rather than a paper-folder full of duplicate and inconsistent information (which often got lost), we created a database-driven web page which allowed the salespeople to create an accurate estimate on the spot, deliver a shiny proposal to their customer, allowed management to view results and work with things like profit margins and job costing, integrated business rules to better understand their labor and materials waste... Combined with a department I created for taking measurements taken from satellite photos, and integrated simultaneous costing with Xactimate.  I'd have to show you sometime, but the owners and salespeople will tell you: it was a powerful and useful creation.

More efficient, less waste, better decisions, more professional proposal, higher conversion/closing rates... 
</aside>

I believe in re-usable code, and the evolution of a business tool as opposed to a narrow-focused, short-term solution. I think jumping on "the app bandwagon" will likely prove to be an expensive mistake in the long run for many people doing it that way, as I have seen many apps mis-used in the past 5 years.  Not to say there is no place for an iphone app, or an android app, but I liken it to committing all resources to flash a few years ago.  Looking back, would we consider it a mistake to have committed $10-100,000+ into developing the latest and greatest flash functionality?